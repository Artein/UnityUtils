name: Run project Tests
run-name: Run project Tests

on:
  pull_request: {}
  push: { branches: [ main ] }
  
env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
  
jobs:  
  testAllModes: # Job 2
    name: All modes
    runs-on: ubuntu-latest
    timeout-minutes: 5 # By default timeout is 360 minutes, but this repository is small
    strategy:
      fail-fast: false
    steps:
      - name: Checkout repository # Step 1
        uses: actions/checkout@v3
        with:
          lfs: true
          clean: true
          submodules: true

      - name: Create LFS files list # Step 2
        if: success()
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS cache # Step 3
        if: success()
        id: lfs-cache
        uses: actions/cache@v3
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

      - name: Git LFS Pull # Step 4
        if: success()
        run: |
          git lfs pull
          git add .
          git reset --hard
          
      - name: Restore Library cache # Step 5
        if: success()
        uses: actions/cache@v3
        with:
          path: Library
          key: Library-run-tests
          restore-keys: |
            Library-run-tests
            Library-
          
      - name: Run Unity TestFramework # Step 6
        if: success()
        id: unity-test-runner
        uses: game-ci/unity-test-runner@v2
        with:
          testMode: all
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          checkName: Test Results
          coverageOptions: 'generateAdditionalMetrics;generateHtmlReport;generateBadgeReport;assemblyFilters:+my.assembly.*'
          
      - name: Upload TestFramework results # Step 7
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: Test results
          path: ${{ steps.unity-test-runner.outputs.artifactsPath }}
          
      - name: Upload TestCoverage results # Step 8
        if: success()
        uses: actions/upload-artifact@v2
        with:
          name: Coverage results
          path: ${{ steps.unity-test-runner.outputs.coveragePath }}